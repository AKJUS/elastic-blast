# Makefile for distributing ElasticBLAST to PyPI
# Author: Christiam Camacho (camacho@ncbi.nlm.nih.gov)
# Created: Mon Jun 14 09:48:58 2021

SHELL=/bin/bash
.PHONY: deploy clean test-deployment test-production-deployment test-deployment-with-search

MODULE?=elastic_blast
PYPI?=testpypi
VERSION?=0.0.56

include Makefile-public

deploy: dist/${MODULE}-${VERSION}.tar.gz
	${VENV}/bin/twine upload --verbose --repository ${PYPI} dist/${MODULE}-${VERSION}.tar.gz

dist/${MODULE}-${VERSION}.tar.gz: ${VENV}
	${VENV}/bin/pip3 install -q twine
	source ${VENV}/bin/activate && python3 setup.py sdist

clean:
	${RM} -fr ${VENV} src/*egg-info dist cfg.ini* submit-and-wait-for-results.sh*

TMP_VENV:=$(shell mktemp -d)
test-deployment:
	-python3 -m venv ${TMP_VENV} && \
        source ${TMP_VENV}/bin/activate && \
        pip install --extra-index-url https://test.pypi.org/simple/ ${MODULE}==${VERSION} && \
        elastic-blast.py --version

########################################################################
# Support for test-deployment-with-search: running a full search on AWS
export ELB_RESULTS:=s3://elasticblast-${USER}/pypi-test-$(shell date +%F-%T)
test-deployment-with-search: test-deployment submit-and-wait-for-results.sh cfg.ini
	@echo Will write results to ${ELB_RESULTS}
	source ${TMP_VENV}/bin/activate && ./submit-and-wait-for-results.sh cfg.ini

submit-and-wait-for-results.sh:
	[ -f submit-and-wait-for-results.sh ] || curl -sO https://raw.githubusercontent.com/ncbi/elastic-blast-demos/master/submit-and-wait-for-results.sh
	[ -x submit-and-wait-for-results.sh ] || chmod +x submit-and-wait-for-results.sh
	sed -i~ -e 's,elastic-blast ,elastic-blast.py ,;s/status /status --verbose /' submit-and-wait-for-results.sh

cfg.ini:
	curl -s https://raw.githubusercontent.com/ncbi/elastic-blast/master/share/etc/elb-aws-blastn-nt-8-nodes.ini -o $@
	sed -i~ -e 's/8x//;s/16/1/;s/1000G/334G/;s/nt/pdbnt/;s/60G/1G/;s,hepatitis.fsa.gz,MANE.GRCh38.v0.8.select_refseq_rna.fna,' $@

########################################################################

test-production-deployment:
	-python3 -m venv ${TMP_VENV} && \
        source ${TMP_VENV}/bin/activate && \
        pip install ${MODULE}==${VERSION} && \
        elastic-blast.py --version
